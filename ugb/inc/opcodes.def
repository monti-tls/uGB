/*
 * This file is part of uGB
 * Copyright (C) 2017  Alexandre Monti
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/***********************************************/
/*** Modified Z80 instruction set definition ***/
/***********************************************/

// http://www.devrs.com/gb/files/opcodes.html
// https://github.com/CTurt/Cinoop/blob/master/source/cb.c

#ifndef DEF_OPCODE
#define DEF_OPCODE(prefix, opcode, size, cycles, flags, mnemonic, microcode)
#endif

#define TODO

/* Macro framework from opcodes.c :
 *
 * SP, SPl, SPh, ..., A, F, ..., H, L : registers
 * d8, r8, a16, d16, ... : instruction immediate operands
 * _fZ, _fN, _fH, _fC : read flags from F register
 * w(), r() : memory primitives
 * _Za(), _Na(), _Ha(), _Ca() : assign flag
 * _Zv() : set zero flag based on result
 * t8, t16 : temporaries
 * v16_, t8_, t16_, t32_ : reserved temporaries
 * _IF() : conditionals with CPU clocks overhead
 * _DI(), _EI() : disable / enable interrupts
 *
 * Some instructions (mainly ALU) are parametrized using reserved
 *  temporaries, like INC(), ADD() or SBC() for example.
 */

#define INC(r) do { \
    _Ha((r & 0x0F) == 0x0F); \
    ++r; \
    _Zv(r); \
} while (0);

#define DEC(r) do { \
    _Ha(((r) & 0x0F) < (((r)-1) & 0x0F)); \
    --r; \
    _Zv(r); \
} while (0);

#define ADD(to, v) do { \
    v16_ = (v); \
    t16_ = *(to) + v16_; \
    _Ca(t16_ & 0xFF00); \
    _Ha(((*(to) & 0x0F) + (v16_ & 0x0F)) > 0x0F); \
    *(to) = t16_ & 0xFF; \
    _Zv(*(to)); \
} while (0);

#define ADD16(to, v) do { \
    v16_ = (v); \
    t32_ = *(to) + v16_; \
    _Ca(t32_ & 0xFFFF0000); \
    _Ha(((*(to) & 0x0FFF) + (v16_ & 0x0FFF)) > 0x0FFF); \
    *(to) = t32_ & 0xFFFF; \
} while (0);

#define ADDs16(to, u, s) do { \
    v16_ = (u); \
    t32_ = (*(to) & 0xFF) + v16_; \
    _Ca(t32_ & 0xFF00); \
    _Ha((((*(to) & 0xFF) & 0x0F) + (v16_ & 0x0F)) > 0x0F); \
    *(to) += s; \
} while (0);

#define ADC(to, v) do { \
    t16_ = *(to) + (v) + _fC; \
    _Ca(t16_ & 0xFF00); \
    _Ha(((t16_ & 0xFF) ^ (*to) ^ (v)) & 0x10); \
    *(to) = t16_ & 0xFF; \
    _Zv(*(to)); \
} while (0);

#define SUB(from, v) do { \
    v16_ = (v); \
    _Ca(v16_ > *(from)); \
    _Ha((v16_ & 0x0F) > (*(from) & 0x0F)); \
    *(from) -= v16_; \
    _Zv(*(from)); \
} while (0);

#define SBC(from, v) do { \
    t16_ = *(from) - (v) - _fC; \
    _Ca(t16_ & 0xFF00); \
    _Ha(((t16_ & 0xFF) ^ *(from) ^ (v)) & 0x10); \
    *(from) = t16_; \
    _Zv(*(from)); \
} while (0);

#define CP(with, v) do { \
    _Za(*(with) == v); \
    _Ca(v > *(with)); \
    _Ha((v & 0x0F) > (*(with) & 0x0F)); \
} while (0);

#define POP(to) do { \
    r(SP++, &to ## l); \
    r(SP++, &to ## h); \
} while (0);

#define PUSH(val) do { \
    w(--SP, val ## h); \
    w(--SP, val ## l); \
} while (0);

#define CALL(addr) do { \
    PUSH(PC); \
    PC = addr; \
} while (0);

#define RET() do { \
    POP(PC); \
} while (0);

#define RLC(r) do { \
    t8_ = (*(r) & 0x80) >> 7; \
    _Ca(t8_); \
    *(r) <<= 1; \
    *(r) += t8_; \
} while (0);

#define RRC(r) do { \
    t8_ = *(r) & 0x01; \
    _Ca(t8_); \
    *(r) >>= 1; \
    if (t8_) *(r) |= 0x80; \
} while (0);

#define RL(r) do { \
    t8_ = _fC; \
    _Ca(*(r) & 0x80); \
    *(r) <<= 1; \
    *(r) += t8_; \
} while (0);

#define RR(r) do { \
    t8_ = _fC; \
    _Ca(*(r) & 0x01); \
    *(r) >>= 1; \
    if (t8_) *(r) |= 0x80; \
} while (0);

#define SLA(r) do { \
    _Ca(*(r) & 0x80); \
    *(r) <<= 1; \
    _Zv(*(r)); \
} while (0);

#define SRA(r) do { \
    _Ca(*(r) & 0x01); \
    *(r) = (*(r) & 0x80) | ((*(r) >> 1) & ~0x80); \
    _Zv(*(r)); \
} while (0);

#define SRL(r) do { \
    _Ca(*(r) & 0x01); \
    *(r) >>= 1; \
    _Zv(*(r)); \
} while (0);

#define SWAP(r) do { \
    *(r) = ((*(r) & 0x0F) << 4) | ((*(r) & 0xF0) >> 4); \
    _Zv(*(r)); \
} while (0);

#define HALT() do { \
    cpu->state = UGB_CPU_HALTED; \
    if (!(IE & UGB_REG_IE_IME_MSK)) cpu->repeat_next_byte = 1; \
} while (0);

DEF_OPCODE(, 00, 1, 4,  "____", "NOP",          ;                             ) // OK
DEF_OPCODE(, 01, 3, 12, "____", "LD BC, d16",   BC = d16;                     ) // OK
DEF_OPCODE(, 02, 1, 8,  "____", "LD (BC), A",   w(BC, A);                     ) // OK
DEF_OPCODE(, 03, 1, 8,  "____", "INC BC",       ++BC;                         ) // OK
DEF_OPCODE(, 04, 1, 4,  "Z0H_", "INC B",        INC(B);                       ) // OK
DEF_OPCODE(, 05, 1, 4,  "Z1H_", "DEC B",        DEC(B);                       ) // OK
DEF_OPCODE(, 06, 2, 8,  "____", "LD B, d8",     B = d8;                       ) // OK
DEF_OPCODE(, 07, 1, 4,  "000C", "RLCA",         RLC(&A);                      ) // OK
DEF_OPCODE(, 08, 3, 20, "____", "LD (a16), SP", w(a16, SPl); w(a16+1, SPh);   ) // OK
DEF_OPCODE(, 09, 1, 8,  "_0HC", "ADD HL, BC",   ADD16(&HL, BC);               ) // OK
DEF_OPCODE(, 0A, 1, 8,  "____", "LD A, (BC)",   r(BC, &A);                    ) // OK
DEF_OPCODE(, 0B, 1, 8,  "____", "DEC BC",       --BC;                         ) // OK
DEF_OPCODE(, 0C, 1, 4,  "Z0H_", "INC C",        INC(C);                       ) // OK
DEF_OPCODE(, 0D, 1, 4,  "Z1H_", "DEC C",        DEC(C);                       ) // OK
DEF_OPCODE(, 0E, 2, 8,  "____", "LD C, d8",     C = d8;                       ) // OK
DEF_OPCODE(, 0F, 1, 4,  "000C", "RRCA",         RRC(&A);                      ) // OK

DEF_OPCODE(, 10, 2, 4,  "____", "STOP 0",       cpu->state = UGB_CPU_HALTED;  ) // OK
DEF_OPCODE(, 11, 3, 12, "____", "LD DE, d16",   DE = d16;                     ) // OK
DEF_OPCODE(, 12, 1, 8,  "____", "LD (DE), A",   w(DE, A);                     ) // OK
DEF_OPCODE(, 13, 1, 8,  "____", "INC DE",       ++DE;                         ) // OK
DEF_OPCODE(, 14, 1, 4,  "Z0H_", "INC D",        INC(D);                       ) // OK
DEF_OPCODE(, 15, 1, 4,  "Z1H_", "DEC D",        DEC(D);                       ) // OK
DEF_OPCODE(, 16, 2, 8,  "____", "LD D, d8",     D = d8;                       ) // OK
DEF_OPCODE(, 17, 1, 4,  "000C", "RLA",          RL(&A);                       ) // OK
DEF_OPCODE(, 18, 2, 12, "____", "JR PCr8",      PC += r8;                     ) // OK
DEF_OPCODE(, 19, 1, 8,  "_0HC", "ADD HL, DE",   ADD16(&HL, DE);               ) // OK
DEF_OPCODE(, 1A, 1, 8,  "____", "LD A, (DE)",   r(DE, &A);                    ) // OK
DEF_OPCODE(, 1B, 1, 8,  "____", "DEC DE",       --DE;                         ) // OK
DEF_OPCODE(, 1C, 1, 4,  "Z0H_", "INC E",        INC(E);                       ) // OK
DEF_OPCODE(, 1D, 1, 4,  "Z1H_", "DEC E",        DEC(E);                       ) // OK
DEF_OPCODE(, 1E, 2, 8,  "____", "LD E, d8",     E = d8;                       ) // OK
DEF_OPCODE(, 1F, 1, 4,  "000C", "RRA",          RR(&A);                       ) // OK

DEF_OPCODE(, 20, 2, 8,  "____", "JR NZ, PCr8",  _IF(!_fZ, PC += r8, 4);       ) // OK
DEF_OPCODE(, 21, 3, 12, "____", "LD HL, d16",   HL = d16;                     ) // OK
DEF_OPCODE(, 22, 1, 8,  "____", "LD (HL+), A",  w(HL++, A);                   ) // OK
DEF_OPCODE(, 23, 1, 8,  "____", "INC HL",       ++HL;                         ) // OK
DEF_OPCODE(, 24, 1, 4,  "Z0H_", "INC H",        INC(H);                       ) // OK
DEF_OPCODE(, 25, 1, 4,  "Z1H_", "DEC H",        DEC(H);                       ) // OK
DEF_OPCODE(, 26, 2, 8,  "____", "LD H, d8",     H = d8;                       ) // OK
DEF_OPCODE(, 27, 1, 4,  "Z_0C", "DAA",          t16 = A | ((F & ~UGB_REG_F_Z_MSK) << 4); \
                                                AF = mednafen_daa_lookup[t16];) // OK
DEF_OPCODE(, 28, 2, 8,  "____", "JR Z, PCr8",   _IF(_fZ, PC += r8, 4);        ) // OK
DEF_OPCODE(, 29, 1, 8,  "_0HC", "ADD HL, HL",   ADD16(&HL, HL);               ) // OK
DEF_OPCODE(, 2A, 1, 8,  "____", "LD A, (HL+)",  r(HL++, &A);                  ) // OK
DEF_OPCODE(, 2B, 1, 8,  "____", "DEC HL",       --HL;                         ) // OK
DEF_OPCODE(, 2C, 1, 4,  "Z0H_", "INC L",        INC(L);                       ) // OK
DEF_OPCODE(, 2D, 1, 4,  "Z1H_", "DEC L",        DEC(L);                       ) // OK
DEF_OPCODE(, 2E, 2, 8,  "____", "LD L, d8",     L = d8;                       ) // OK
DEF_OPCODE(, 2F, 1, 4,  "_11_", "CPL",          A = ~A;                       ) // OK

DEF_OPCODE(, 30, 2, 8,  "____", "JR NC, PCr8",  _IF(!_fC, PC += r8, 4);       ) // OK
DEF_OPCODE(, 31, 3, 12, "____", "LD SP, d16",   SP = d16;                     ) // OK
DEF_OPCODE(, 32, 1, 8,  "____", "LD (HL-), A",  w(HL--, A);                   ) // OK
DEF_OPCODE(, 33, 1, 8,  "____", "INC SP",       ++SP;                         ) // OK
DEF_OPCODE(, 34, 1, 12, "Z0H_", "INC (HL)",     r(HL, &t8); INC(t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(, 35, 1, 12, "Z1H_", "DEC (HL)",     r(HL, &t8); DEC(t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(, 36, 2, 12, "____", "LD (HL), d8",  w(HL, d8);                    ) // OK
DEF_OPCODE(, 37, 1, 4,  "_001", "SCF",                                        ) // OK
DEF_OPCODE(, 38, 2, 8,  "____", "JR C, PCr8",   _IF(_fC, PC += r8, 4);        ) // OK
DEF_OPCODE(, 39, 1, 8,  "_0HC", "ADD HL, SP",   ADD16(&HL, SP);               ) // OK
DEF_OPCODE(, 3A, 1, 8,  "____", "LD A, (HL-)",  r(HL--, &A);                  ) // OK
DEF_OPCODE(, 3B, 1, 8,  "____", "DEC SP",       --SP;                         ) // OK
DEF_OPCODE(, 3C, 1, 4,  "Z0H_", "INC A",        INC(A);                       ) // OK
DEF_OPCODE(, 3D, 1, 4,  "Z1H_", "DEC A",        DEC(A);                       ) // OK
DEF_OPCODE(, 3E, 2, 8,  "____", "LD A, d8",     A = d8;                       ) // OK
DEF_OPCODE(, 3F, 1, 4,  "_00C", "CCF",          _Ca(!_fC);                    ) // OK

DEF_OPCODE(, 40, 1, 4,  "____", "LD B, B",      B = B;                        ) // OK
DEF_OPCODE(, 41, 1, 4,  "____", "LD B, C",      B = C;                        ) // OK
DEF_OPCODE(, 42, 1, 4,  "____", "LD B, D",      B = D;                        ) // OK
DEF_OPCODE(, 43, 1, 4,  "____", "LD B, E",      B = E;                        ) // OK
DEF_OPCODE(, 44, 1, 4,  "____", "LD B, H",      B = H;                        ) // OK
DEF_OPCODE(, 45, 1, 4,  "____", "LD B, L",      B = L;                        ) // OK
DEF_OPCODE(, 46, 1, 8,  "____", "LD B, (HL)",   r(HL, &B);                    ) // OK
DEF_OPCODE(, 47, 1, 4,  "____", "LD B, A",      B = A;                        ) // OK
DEF_OPCODE(, 48, 1, 4,  "____", "LD C, B",      C = B;                        ) // OK
DEF_OPCODE(, 49, 1, 4,  "____", "LD C, C",      C = C;                        ) // OK
DEF_OPCODE(, 4A, 1, 4,  "____", "LD C, D",      C = D;                        ) // OK
DEF_OPCODE(, 4B, 1, 4,  "____", "LD C, E",      C = E;                        ) // OK
DEF_OPCODE(, 4C, 1, 4,  "____", "LD C, H",      C = H;                        ) // OK
DEF_OPCODE(, 4D, 1, 4,  "____", "LD C, L",      C = L;                        ) // OK
DEF_OPCODE(, 4E, 1, 8,  "____", "LD C, (HL)",   r(HL, &C);                    ) // OK
DEF_OPCODE(, 4F, 1, 4,  "____", "LD C, A",      C = A;                        ) // OK

DEF_OPCODE(, 50, 1, 4,  "____", "LD D, B",      D = B;                        ) // OK
DEF_OPCODE(, 51, 1, 4,  "____", "LD D, C",      D = C;                        ) // OK
DEF_OPCODE(, 52, 1, 4,  "____", "LD D, D",      D = D;                        ) // OK
DEF_OPCODE(, 53, 1, 4,  "____", "LD D, E",      D = E;                        ) // OK
DEF_OPCODE(, 54, 1, 4,  "____", "LD D, H",      D = H;                        ) // OK
DEF_OPCODE(, 55, 1, 4,  "____", "LD D, L",      D = L;                        ) // OK
DEF_OPCODE(, 56, 1, 8,  "____", "LD D, (HL)",   r(HL, &D);                    ) // OK
DEF_OPCODE(, 57, 1, 4,  "____", "LD D, A",      D = A;                        ) // OK
DEF_OPCODE(, 58, 1, 4,  "____", "LD E, B",      E = B;                        ) // OK
DEF_OPCODE(, 59, 1, 4,  "____", "LD E, C",      E = C;                        ) // OK
DEF_OPCODE(, 5A, 1, 4,  "____", "LD E, D",      E = D;                        ) // OK
DEF_OPCODE(, 5B, 1, 4,  "____", "LD E, E",      E = E;                        ) // OK
DEF_OPCODE(, 5C, 1, 4,  "____", "LD E, H",      E = H;                        ) // OK
DEF_OPCODE(, 5D, 1, 4,  "____", "LD E, L",      E = L;                        ) // OK
DEF_OPCODE(, 5E, 1, 8,  "____", "LD E, (HL)",   r(HL, &E);                    ) // OK
DEF_OPCODE(, 5F, 1, 4,  "____", "LD E, A",      E = A;                        ) // OK

DEF_OPCODE(, 60, 1, 4,  "____", "LD H, B",      H = B;                        ) // OK
DEF_OPCODE(, 61, 1, 4,  "____", "LD H, C",      H = C;                        ) // OK
DEF_OPCODE(, 62, 1, 4,  "____", "LD H, D",      H = D;                        ) // OK
DEF_OPCODE(, 63, 1, 4,  "____", "LD H, E",      H = E;                        ) // OK
DEF_OPCODE(, 64, 1, 4,  "____", "LD H, H",      H = H;                        ) // OK
DEF_OPCODE(, 65, 1, 4,  "____", "LD H, L",      H = L;                        ) // OK
DEF_OPCODE(, 66, 1, 8,  "____", "LD H, (HL)",   r(HL, &H);                    ) // OK
DEF_OPCODE(, 67, 1, 4,  "____", "LD H, A",      H = A;                        ) // OK
DEF_OPCODE(, 68, 1, 4,  "____", "LD L, B",      L = B;                        ) // OK
DEF_OPCODE(, 69, 1, 4,  "____", "LD L, C",      L = C;                        ) // OK
DEF_OPCODE(, 6A, 1, 4,  "____", "LD L, D",      L = D;                        ) // OK
DEF_OPCODE(, 6B, 1, 4,  "____", "LD L, E",      L = E;                        ) // OK
DEF_OPCODE(, 6C, 1, 4,  "____", "LD L, H",      L = H;                        ) // OK
DEF_OPCODE(, 6D, 1, 4,  "____", "LD L, L",      L = L;                        ) // OK
DEF_OPCODE(, 6E, 1, 8,  "____", "LD L, (HL)",   r(HL, &L);                    ) // OK
DEF_OPCODE(, 6F, 1, 4,  "____", "LD L, A",      L = A;                        ) // OK

DEF_OPCODE(, 70, 1, 8,  "____", "LD (HL), B",   w(HL, B);                     ) // OK
DEF_OPCODE(, 71, 1, 8,  "____", "LD (HL), C",   w(HL, C);                     ) // OK
DEF_OPCODE(, 72, 1, 8,  "____", "LD (HL), D",   w(HL, D);                     ) // OK
DEF_OPCODE(, 73, 1, 8,  "____", "LD (HL), E",   w(HL, E);                     ) // OK
DEF_OPCODE(, 74, 1, 8,  "____", "LD (HL), H",   w(HL, H);                     ) // OK
DEF_OPCODE(, 75, 1, 8,  "____", "LD (HL), L",   w(HL, L);                     ) // OK
DEF_OPCODE(, 76, 1, 4,  "____", "HALT",         HALT();                       ) // OK
DEF_OPCODE(, 77, 1, 8,  "____", "LD (HL), A",   w(HL, A);                     ) // OK
DEF_OPCODE(, 78, 1, 4,  "____", "LD A, B",      A = B;                        ) // OK
DEF_OPCODE(, 79, 1, 4,  "____", "LD A, C",      A = C;                        ) // OK
DEF_OPCODE(, 7A, 1, 4,  "____", "LD A, D",      A = D;                        ) // OK
DEF_OPCODE(, 7B, 1, 4,  "____", "LD A, E",      A = E;                        ) // OK
DEF_OPCODE(, 7C, 1, 4,  "____", "LD A, H",      A = H;                        ) // OK
DEF_OPCODE(, 7D, 1, 4,  "____", "LD A, L",      A = L;                        ) // OK
DEF_OPCODE(, 7E, 1, 8,  "____", "LD A, (HL)",   r(HL, &A);                    ) // OK
DEF_OPCODE(, 7F, 1, 4,  "____", "LD A, A",      A = A;                        ) // OK

DEF_OPCODE(, 80, 1, 4,  "Z0HC", "ADD A, B",     ADD(&A, B);                   ) // OK
DEF_OPCODE(, 81, 1, 4,  "Z0HC", "ADD A, C",     ADD(&A, C);                   ) // OK
DEF_OPCODE(, 82, 1, 4,  "Z0HC", "ADD A, D",     ADD(&A, D);                   ) // OK
DEF_OPCODE(, 83, 1, 4,  "Z0HC", "ADD A, E",     ADD(&A, E);                   ) // OK
DEF_OPCODE(, 84, 1, 4,  "Z0HC", "ADD A, H",     ADD(&A, H);                   ) // OK
DEF_OPCODE(, 85, 1, 4,  "Z0HC", "ADD A, L",     ADD(&A, L);                   ) // OK
DEF_OPCODE(, 86, 1, 8,  "Z0HC", "ADD A, (HL)",  r(HL, &t8); ADD(&A, t8);      ) // OK
DEF_OPCODE(, 87, 1, 4,  "Z0HC", "ADD A, A",     ADD(&A, A);                   ) // OK
DEF_OPCODE(, 88, 1, 4,  "Z0HC", "ADC A, B",     ADC(&A, B);                   ) // OK
DEF_OPCODE(, 89, 1, 4,  "Z0HC", "ADC A, C",     ADC(&A, C);                   ) // OK
DEF_OPCODE(, 8A, 1, 4,  "Z0HC", "ADC A, D",     ADC(&A, D);                   ) // OK
DEF_OPCODE(, 8B, 1, 4,  "Z0HC", "ADC A, E",     ADC(&A, E);                   ) // OK
DEF_OPCODE(, 8C, 1, 4,  "Z0HC", "ADC A, H",     ADC(&A, H);                   ) // OK
DEF_OPCODE(, 8D, 1, 4,  "Z0HC", "ADC A, L",     ADC(&A, L);                   ) // OK
DEF_OPCODE(, 8E, 1, 8,  "Z0HC", "ADC A, (HL)",  r(HL, &t8); ADC(&A, t8);      ) // OK
DEF_OPCODE(, 8F, 1, 4,  "Z0HC", "ADC A, A",     ADC(&A, A);                   ) // OK

DEF_OPCODE(, 90, 1, 4,  "Z1HC", "SUB B",        SUB(&A, B);                   ) // OK
DEF_OPCODE(, 91, 1, 4,  "Z1HC", "SUB C",        SUB(&A, C);                   ) // OK
DEF_OPCODE(, 92, 1, 4,  "Z1HC", "SUB D",        SUB(&A, D);                   ) // OK
DEF_OPCODE(, 93, 1, 4,  "Z1HC", "SUB E",        SUB(&A, E);                   ) // OK
DEF_OPCODE(, 94, 1, 4,  "Z1HC", "SUB H",        SUB(&A, H);                   ) // OK
DEF_OPCODE(, 95, 1, 4,  "Z1HC", "SUB L",        SUB(&A, L);                   ) // OK
DEF_OPCODE(, 96, 1, 8,  "Z1HC", "SUB (HL)",     r(HL, &t8); SUB(&A, t8);      ) // OK
DEF_OPCODE(, 97, 1, 4,  "Z1HC", "SUB A",        SUB(&A, A);                   ) // OK
DEF_OPCODE(, 98, 1, 4,  "Z1HC", "SBC B",        SBC(&A, B);                   ) // OK
DEF_OPCODE(, 99, 1, 4,  "Z1HC", "SBC C",        SBC(&A, C);                   ) // OK
DEF_OPCODE(, 9A, 1, 4,  "Z1HC", "SBC D",        SBC(&A, D);                   ) // OK
DEF_OPCODE(, 9B, 1, 4,  "Z1HC", "SBC E",        SBC(&A, E);                   ) // OK
DEF_OPCODE(, 9C, 1, 4,  "Z1HC", "SBC H",        SBC(&A, H);                   ) // OK
DEF_OPCODE(, 9D, 1, 4,  "Z1HC", "SBC L",        SBC(&A, L);                   ) // OK
DEF_OPCODE(, 9E, 1, 8,  "Z1HC", "SBC (HL)",     r(HL, &t8); SBC(&A, t8);      ) // OK
DEF_OPCODE(, 9F, 1, 4,  "Z1HC", "SBC A",        SBC(&A, A);                   ) // OK

DEF_OPCODE(, A0, 1, 4,  "Z010", "AND B",        A &= B; _Zv(A);               ) // OK
DEF_OPCODE(, A1, 1, 4,  "Z010", "AND C",        A &= C; _Zv(A);               ) // OK
DEF_OPCODE(, A2, 1, 4,  "Z010", "AND D",        A &= D; _Zv(A);               ) // OK
DEF_OPCODE(, A3, 1, 4,  "Z010", "AND E",        A &= E; _Zv(A);               ) // OK
DEF_OPCODE(, A4, 1, 4,  "Z010", "AND H",        A &= H; _Zv(A);               ) // OK
DEF_OPCODE(, A5, 1, 4,  "Z010", "AND L",        A &= L; _Zv(A);               ) // OK
DEF_OPCODE(, A6, 1, 8,  "Z010", "AND (HL)",     r(HL, &t8); A &= t8; _Zv(A);  ) // OK
DEF_OPCODE(, A7, 1, 4,  "Z010", "AND A",        A &= A; _Zv(A);               ) // OK
DEF_OPCODE(, A8, 1, 4,  "Z000", "XOR B",        A ^= B; _Zv(A);               ) // OK
DEF_OPCODE(, A9, 1, 4,  "Z000", "XOR C",        A ^= C; _Zv(A);               ) // OK
DEF_OPCODE(, AA, 1, 4,  "Z000", "XOR D",        A ^= D; _Zv(A);               ) // OK
DEF_OPCODE(, AB, 1, 4,  "Z000", "XOR E",        A ^= E; _Zv(A);               ) // OK
DEF_OPCODE(, AC, 1, 4,  "Z000", "XOR H",        A ^= H; _Zv(A);               ) // OK
DEF_OPCODE(, AD, 1, 4,  "Z000", "XOR L",        A ^= L; _Zv(A);               ) // OK
DEF_OPCODE(, AE, 1, 8,  "Z000", "XOR (HL)",     r(HL, &t8); A ^= t8; _Zv(A);  ) // OK
DEF_OPCODE(, AF, 1, 4,  "Z000", "XOR A",        A ^= A; _Zv(A);               ) // OK

DEF_OPCODE(, B0, 1, 4,  "Z000", "OR B",         A |= B; _Zv(A);               ) // OK
DEF_OPCODE(, B1, 1, 4,  "Z000", "OR C",         A |= C; _Zv(A);               ) // OK
DEF_OPCODE(, B2, 1, 4,  "Z000", "OR D",         A |= D; _Zv(A);               ) // OK
DEF_OPCODE(, B3, 1, 4,  "Z000", "OR E",         A |= E; _Zv(A);               ) // OK
DEF_OPCODE(, B4, 1, 4,  "Z000", "OR H",         A |= H; _Zv(A);               ) // OK
DEF_OPCODE(, B5, 1, 4,  "Z000", "OR L",         A |= L; _Zv(A);               ) // OK
DEF_OPCODE(, B6, 1, 8,  "Z000", "OR (HL)",      r(HL, &t8); A |= t8; _Zv(A);  ) // OK
DEF_OPCODE(, B7, 1, 4,  "Z000", "OR A",         A |= A; _Zv(A);               ) // OK
DEF_OPCODE(, B8, 1, 4,  "Z1HC", "CP B",         CP(&A, B);                    ) // OK
DEF_OPCODE(, B9, 1, 4,  "Z1HC", "CP C",         CP(&A, C);                    ) // OK
DEF_OPCODE(, BA, 1, 4,  "Z1HC", "CP D",         CP(&A, D);                    ) // OK
DEF_OPCODE(, BB, 1, 4,  "Z1HC", "CP E",         CP(&A, E);                    ) // OK
DEF_OPCODE(, BC, 1, 4,  "Z1HC", "CP H",         CP(&A, H);                    ) // OK
DEF_OPCODE(, BD, 1, 4,  "Z1HC", "CP L",         CP(&A, L);                    ) // OK
DEF_OPCODE(, BE, 1, 8,  "Z1HC", "CP (HL)",      r(HL, &t8); CP(&A, t8);       ) // OK
DEF_OPCODE(, BF, 1, 4,  "Z1HC", "CP A",         CP(&A, A);                    ) // OK

DEF_OPCODE(, C0, 1, 8,  "____", "RET NZ",       _IF(!_fZ, RET(), 12);         ) // OK
DEF_OPCODE(, C1, 1, 12, "____", "POP BC",       POP(BC);                      ) // OK
DEF_OPCODE(, C2, 3, 12, "____", "JP NZ, a16",   _IF(!_fZ, PC = a16, 4);       ) // OK
DEF_OPCODE(, C3, 3, 16, "____", "JP a16",       PC = a16;                     ) // OK
DEF_OPCODE(, C4, 3, 12, "____", "CALL NZ, a16", _IF(!_fZ, CALL(a16), 12);     ) // OK
DEF_OPCODE(, C5, 1, 16, "____", "PUSH BC",      PUSH(BC);                     ) // OK
DEF_OPCODE(, C6, 2, 8,  "Z0HC", "ADD A, d8",    ADD(&A, d8);                  ) // OK
DEF_OPCODE(, C7, 1, 16, "____", "RST 00",       CALL(0x00);                   ) // OK
DEF_OPCODE(, C8, 1, 8,  "____", "RET Z",        _IF(_fZ, RET(), 12);          ) // OK
DEF_OPCODE(, C9, 1, 16, "____", "RET",          RET();                        ) // OK
DEF_OPCODE(, CA, 3, 12, "____", "JP Z, a16",    _IF(_fZ, PC = a16, 4);        ) // OK
// DEF_OPCODE(, CB) 0xCB prefix -- see table below
DEF_OPCODE(, CC, 3, 12, "____", "CALL Z, a16",  _IF(_fZ, CALL(a16), 12);      ) // OK
DEF_OPCODE(, CD, 3, 24, "____", "CALL a16",     CALL(a16);                    ) // OK
DEF_OPCODE(, CE, 2, 8,  "Z0HC", "ADC A, d8",    ADC(&A, d8);                  ) // OK
DEF_OPCODE(, CF, 1, 16, "____", "RST 08",       CALL(0x08);                   ) // OK

DEF_OPCODE(, D0, 1, 8,  "____", "RET NC",       _IF(!_fC, RET(), 12);         ) // OK
DEF_OPCODE(, D1, 1, 12, "____", "POP DE",       POP(DE);                      ) // OK
DEF_OPCODE(, D2, 3, 12, "____", "JP NC, a16",   _IF(!_fC, PC = a16, 4);       ) // OK
// DEF_OPCODE(, D3) invalid
DEF_OPCODE(, D4, 3, 12, "____", "CALL NC, a16", _IF(!_fC, CALL(a16), 12);     ) // OK
DEF_OPCODE(, D5, 1, 16, "____", "PUSH DE",      PUSH(DE);                     ) // OK
DEF_OPCODE(, D6, 2, 8,  "Z1HC", "SUB d8",       SUB(&A, d8);                  ) // OK
DEF_OPCODE(, D7, 1, 16, "____", "RST 10",       CALL(0x10);                   ) // OK
DEF_OPCODE(, D8, 1, 8,  "____", "RET C",        _IF(_fC, RET(), 12);          ) // OK
DEF_OPCODE(, D9, 1, 16, "____", "RETI",         RET(); _EI();                 ) // OK
DEF_OPCODE(, DA, 3, 12, "____", "JP C, a16",    _IF(_fC, PC = a16, 4);        ) // OK
// DEF_OPCODE(, DB) invalid
DEF_OPCODE(, DC, 3, 12, "____", "CALL C, a16",  _IF(_fC, CALL(a16), 12);      ) // OK
// DEF_OPCODE(, DD) invalid
DEF_OPCODE(, DE, 2, 8,  "Z1HC", "SBC A, d8",    SBC(&A, d8);                  ) // OK
DEF_OPCODE(, DF, 1, 16, "____", "RST 18",       CALL(0x18);                   ) // OK

DEF_OPCODE(, E0, 2, 12, "____", "LDH (a8), A",  w(0xFF00 + a8, A);            ) // OK
DEF_OPCODE(, E1, 1, 12, "____", "POP HL",       POP(HL);                      ) // OK
DEF_OPCODE(, E2, 2, 8,  "____", "LD (C), A",    w(0xFF00 + C, A);             ) // OK
// DEF_OPCODE(, E3) invalid
// DEF_OPCODE(, E4) invalid
DEF_OPCODE(, E5, 1, 16, "____", "PUSH HL",      PUSH(HL);                     ) // OK
DEF_OPCODE(, E6, 2, 8,  "Z010", "AND d8",       A &= d8; _Zv(A);              ) // OK
DEF_OPCODE(, E7, 1, 16, "____", "RST 20",       CALL(0x20);                   ) // OK
DEF_OPCODE(, E8, 2, 16, "00HC", "ADD SP, r8",   ADDs16(&SP, a8, r8);          ) // OK ??????
DEF_OPCODE(, E9, 1, 4,  "____", "JP (HL)",      PC = HL;                      ) // OK
DEF_OPCODE(, EA, 3, 16, "____", "LD (a16), A",  w(a16, A);                    ) // OK
// DEF_OPCODE(, EB) invalid
// DEF_OPCODE(, EC) invalid
// DEF_OPCODE(, ED) invalid
DEF_OPCODE(, EE, 2, 8,  "Z000", "XOR d8",       A ^= d8; _Zv(A);              ) // OK
DEF_OPCODE(, EF, 1, 16, "____", "RST 28",       CALL(0x28);                   ) // OK

DEF_OPCODE(, F0, 2, 12, "____", "LDH A, (a8)",  r(0xFF00 + a8, &A);           ) // OK
DEF_OPCODE(, F1, 1, 12, "ZNHC", "POP AF",       POP(AF);                      ) // OK
DEF_OPCODE(, F2, 2, 8,  "____", "LD A, (C)",    r(0xFF00 + C, &A);            ) // OK
DEF_OPCODE(, F3, 1, 4,  "____", "DI",           _DI();                        ) // OK
// DEF_OPCODE(, F4) invalid
DEF_OPCODE(, F5, 1, 16, "____", "PUSH AF",      PUSH(AF);                     ) // OK
DEF_OPCODE(, F6, 2, 8,  "Z000", "OR d8",        A |= d8; _Zv(A);              ) // OK
DEF_OPCODE(, F7, 1, 16, "____", "RST 30",       CALL(0x30);                   ) // OK
DEF_OPCODE(, F8, 2, 12, "00HC", "LD HL, SPr8",  HL = SP; ADDs16(&HL, a8, r8); ) // OK ??????
DEF_OPCODE(, F9, 1, 8,  "____", "LD SP, HL",    SP = HL;                      ) // OK
DEF_OPCODE(, FA, 3, 16, "____", "LD A, (a16)",  r(a16, &A);                   ) // OK
DEF_OPCODE(, FB, 1, 4,  "____", "EI",           _EI();                        ) // OK
// DEF_OPCODE(, FC) invalid
// DEF_OPCODE(, FD) invalid
DEF_OPCODE(, FE, 2, 8,  "Z1HC", "CP d8",        CP(&A, d8);                   ) // OK
DEF_OPCODE(, FF, 1, 16, "____", "RST 38",       CALL(0x38);                   ) // OK

DEF_OPCODE(CB, 00, 2, 8,  "Z00C", "RLC B",      RLC(&B); _Zv(B);              ) // OK
DEF_OPCODE(CB, 01, 2, 8,  "Z00C", "RLC C",      RLC(&C); _Zv(C);              ) // OK
DEF_OPCODE(CB, 02, 2, 8,  "Z00C", "RLC D",      RLC(&D); _Zv(D);              ) // OK
DEF_OPCODE(CB, 03, 2, 8,  "Z00C", "RLC E",      RLC(&E); _Zv(E);              ) // OK
DEF_OPCODE(CB, 04, 2, 8,  "Z00C", "RLC H",      RLC(&H); _Zv(H);              ) // OK
DEF_OPCODE(CB, 05, 2, 8,  "Z00C", "RLC L",      RLC(&L); _Zv(L);              ) // OK
DEF_OPCODE(CB, 06, 2, 16, "Z00C", "RLC (HL)",   r(HL, &t8); RLC(&t8); \
                                                w(HL, t8); _Zv(t8);           ) // OK
DEF_OPCODE(CB, 07, 2, 8,  "Z00C", "RLC A",      RLC(&A); _Zv(A);              ) // OK
DEF_OPCODE(CB, 08, 2, 8,  "Z00C", "RRC B",      RRC(&B); _Zv(B);              ) // OK
DEF_OPCODE(CB, 09, 2, 8,  "Z00C", "RRC C",      RRC(&C); _Zv(C);              ) // OK
DEF_OPCODE(CB, 0A, 2, 8,  "Z00C", "RRC D",      RRC(&D); _Zv(D);              ) // OK
DEF_OPCODE(CB, 0B, 2, 8,  "Z00C", "RRC E",      RRC(&E); _Zv(E);              ) // OK
DEF_OPCODE(CB, 0C, 2, 8,  "Z00C", "RRC H",      RRC(&H); _Zv(H);              ) // OK
DEF_OPCODE(CB, 0D, 2, 8,  "Z00C", "RRC L",      RRC(&L); _Zv(L);              ) // OK
DEF_OPCODE(CB, 0E, 2, 16, "Z00C", "RRC (HL)",   r(HL, &t8); RRC(&t8); \
                                                w(HL, t8); _Zv(t8);           ) // OK
DEF_OPCODE(CB, 0F, 2, 8,  "Z00C", "RRC A",      RRC(&A); _Zv(A);              ) // OK

DEF_OPCODE(CB, 10, 2, 8,  "Z00C", "RL B",       RL(&B); _Zv(B);               ) // OK
DEF_OPCODE(CB, 11, 2, 8,  "Z00C", "RL C",       RL(&C); _Zv(C);               ) // OK
DEF_OPCODE(CB, 12, 2, 8,  "Z00C", "RL D",       RL(&D); _Zv(D);               ) // OK
DEF_OPCODE(CB, 13, 2, 8,  "Z00C", "RL E",       RL(&E); _Zv(E);               ) // OK
DEF_OPCODE(CB, 14, 2, 8,  "Z00C", "RL H",       RL(&H); _Zv(H);               ) // OK
DEF_OPCODE(CB, 15, 2, 8,  "Z00C", "RL L",       RL(&L); _Zv(L);               ) // OK
DEF_OPCODE(CB, 16, 2, 16, "Z00C", "RL (HL)",    r(HL, &t8); RL(&t8); \
                                                w(HL, t8); _Zv(t8);           ) // OK
DEF_OPCODE(CB, 17, 2, 8,  "Z00C", "RL A",       RL(&A); _Zv(A);               ) // OK
DEF_OPCODE(CB, 18, 2, 8,  "Z00C", "RR B",       RR(&B); _Zv(B);               ) // OK
DEF_OPCODE(CB, 19, 2, 8,  "Z00C", "RR C",       RR(&C); _Zv(C);               ) // OK
DEF_OPCODE(CB, 1A, 2, 8,  "Z00C", "RR D",       RR(&D); _Zv(D);               ) // OK
DEF_OPCODE(CB, 1B, 2, 8,  "Z00C", "RR E",       RR(&E); _Zv(E);               ) // OK
DEF_OPCODE(CB, 1C, 2, 8,  "Z00C", "RR H",       RR(&H); _Zv(H);               ) // OK
DEF_OPCODE(CB, 1D, 2, 8,  "Z00C", "RR L",       RR(&L); _Zv(L);               ) // OK
DEF_OPCODE(CB, 1E, 2, 16, "Z00C", "RR (HL)",    r(HL, &t8); RR(&t8); \
                                                w(HL, t8); _Zv(t8);           ) // OK
DEF_OPCODE(CB, 1F, 2, 8,  "Z00C", "RR A",       RR(&A); _Zv(A);               ) // OK

DEF_OPCODE(CB, 20, 2, 8,  "Z00C", "SLA B",      SLA(&B);                      ) // OK
DEF_OPCODE(CB, 21, 2, 8,  "Z00C", "SLA C",      SLA(&C);                      ) // OK
DEF_OPCODE(CB, 22, 2, 8,  "Z00C", "SLA D",      SLA(&D);                      ) // OK
DEF_OPCODE(CB, 23, 2, 8,  "Z00C", "SLA E",      SLA(&E);                      ) // OK
DEF_OPCODE(CB, 24, 2, 8,  "Z00C", "SLA H",      SLA(&H);                      ) // OK
DEF_OPCODE(CB, 25, 2, 8,  "Z00C", "SLA L",      SLA(&L);                      ) // OK
DEF_OPCODE(CB, 26, 2, 16, "Z00C", "SLA (HL)",   r(HL, &t8); SLA(&t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(CB, 27, 2, 8,  "Z00C", "SLA A",      SLA(&A);                      ) // OK

DEF_OPCODE(CB, 28, 2, 8,  "Z00C", "SRA B",      SRA(&B);                      ) // OK
DEF_OPCODE(CB, 29, 2, 8,  "Z00C", "SRA C",      SRA(&C);                      ) // OK
DEF_OPCODE(CB, 2A, 2, 8,  "Z00C", "SRA D",      SRA(&D);                      ) // OK
DEF_OPCODE(CB, 2B, 2, 8,  "Z00C", "SRA E",      SRA(&E);                      ) // OK
DEF_OPCODE(CB, 2C, 2, 8,  "Z00C", "SRA H",      SRA(&H);                      ) // OK
DEF_OPCODE(CB, 2D, 2, 8,  "Z00C", "SRA L",      SRA(&L);                      ) // OK
DEF_OPCODE(CB, 2E, 2, 16, "Z00C", "SRA (HL)",   r(HL, &t8); SRA(&t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(CB, 2F, 2, 8,  "Z00C", "SRA A",      SRA(&A);                      ) // OK

DEF_OPCODE(CB, 30, 2, 8,  "Z000", "SWAP B",     SWAP(&B);                     ) // OK
DEF_OPCODE(CB, 31, 2, 8,  "Z000", "SWAP C",     SWAP(&C);                     ) // OK
DEF_OPCODE(CB, 32, 2, 8,  "Z000", "SWAP D",     SWAP(&D);                     ) // OK
DEF_OPCODE(CB, 33, 2, 8,  "Z000", "SWAP E",     SWAP(&E);                     ) // OK
DEF_OPCODE(CB, 34, 2, 8,  "Z000", "SWAP H",     SWAP(&H);                     ) // OK
DEF_OPCODE(CB, 35, 2, 8,  "Z000", "SWAP L",     SWAP(&L);                     ) // OK
DEF_OPCODE(CB, 36, 2, 16, "Z000", "SWAP (HL)",  r(HL, &t8); SWAP(&t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(CB, 37, 2, 8,  "Z000", "SWAP A",     SWAP(&A);                     ) // OK
DEF_OPCODE(CB, 38, 2, 8,  "Z00C", "SRL B",      SRL(&B);                      ) // OK
DEF_OPCODE(CB, 39, 2, 8,  "Z00C", "SRL C",      SRL(&C);                      ) // OK
DEF_OPCODE(CB, 3A, 2, 8,  "Z00C", "SRL D",      SRL(&D);                      ) // OK
DEF_OPCODE(CB, 3B, 2, 8,  "Z00C", "SRL E",      SRL(&E);                      ) // OK
DEF_OPCODE(CB, 3C, 2, 8,  "Z00C", "SRL H",      SRL(&H);                      ) // OK
DEF_OPCODE(CB, 3D, 2, 8,  "Z00C", "SRL L",      SRL(&L);                      ) // OK
DEF_OPCODE(CB, 3E, 2, 16, "Z00C", "SRL (HL)",   r(HL, &t8); SRL(&t8); \
                                                w(HL, t8);                    ) // OK
DEF_OPCODE(CB, 3F, 2, 8,  "Z00C", "SRL A",      SRL(&A);                      ) // OK

DEF_OPCODE(CB, 40, 2, 8,  "Z01_", "BIT 0, B",   _Zv(B & (0x1 << 0));               )
DEF_OPCODE(CB, 41, 2, 8,  "Z01_", "BIT 0, C",   _Zv(C & (0x1 << 0));               )
DEF_OPCODE(CB, 42, 2, 8,  "Z01_", "BIT 0, D",   _Zv(D & (0x1 << 0));               )
DEF_OPCODE(CB, 43, 2, 8,  "Z01_", "BIT 0, E",   _Zv(E & (0x1 << 0));               )
DEF_OPCODE(CB, 44, 2, 8,  "Z01_", "BIT 0, H",   _Zv(H & (0x1 << 0));               )
DEF_OPCODE(CB, 45, 2, 8,  "Z01_", "BIT 0, L",   _Zv(L & (0x1 << 0));               )
DEF_OPCODE(CB, 46, 2, 16, "Z01_", "BIT 0, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 0));  )
DEF_OPCODE(CB, 47, 2, 8,  "Z01_", "BIT 0, A",   _Zv(A & (0x1 << 0));               )
DEF_OPCODE(CB, 48, 2, 8,  "Z01_", "BIT 1, B",   _Zv(B & (0x1 << 1));               )
DEF_OPCODE(CB, 49, 2, 8,  "Z01_", "BIT 1, C",   _Zv(C & (0x1 << 1));               )
DEF_OPCODE(CB, 4A, 2, 8,  "Z01_", "BIT 1, D",   _Zv(D & (0x1 << 1));               )
DEF_OPCODE(CB, 4B, 2, 8,  "Z01_", "BIT 1, E",   _Zv(E & (0x1 << 1));               )
DEF_OPCODE(CB, 4C, 2, 8,  "Z01_", "BIT 1, H",   _Zv(H & (0x1 << 1));               )
DEF_OPCODE(CB, 4D, 2, 8,  "Z01_", "BIT 1, L",   _Zv(L & (0x1 << 1));               )
DEF_OPCODE(CB, 4E, 2, 16, "Z01_", "BIT 1, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 1));  )
DEF_OPCODE(CB, 4F, 2, 8,  "Z01_", "BIT 1, A",   _Zv(A & (0x1 << 1));               )

DEF_OPCODE(CB, 50, 2, 8,  "Z01_", "BIT 2, B",   _Zv(B & (0x1 << 2));               )
DEF_OPCODE(CB, 51, 2, 8,  "Z01_", "BIT 2, C",   _Zv(C & (0x1 << 2));               )
DEF_OPCODE(CB, 52, 2, 8,  "Z01_", "BIT 2, D",   _Zv(D & (0x1 << 2));               )
DEF_OPCODE(CB, 53, 2, 8,  "Z01_", "BIT 2, E",   _Zv(E & (0x1 << 2));               )
DEF_OPCODE(CB, 54, 2, 8,  "Z01_", "BIT 2, H",   _Zv(H & (0x1 << 2));               )
DEF_OPCODE(CB, 55, 2, 8,  "Z01_", "BIT 2, L",   _Zv(L & (0x1 << 2));               )
DEF_OPCODE(CB, 56, 2, 16, "Z01_", "BIT 2, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 2));  )
DEF_OPCODE(CB, 57, 2, 8,  "Z01_", "BIT 2, A",   _Zv(A & (0x1 << 2));               )
DEF_OPCODE(CB, 58, 2, 8,  "Z01_", "BIT 3, B",   _Zv(B & (0x1 << 3));               )
DEF_OPCODE(CB, 59, 2, 8,  "Z01_", "BIT 3, C",   _Zv(C & (0x1 << 3));               )
DEF_OPCODE(CB, 5A, 2, 8,  "Z01_", "BIT 3, D",   _Zv(D & (0x1 << 3));               )
DEF_OPCODE(CB, 5B, 2, 8,  "Z01_", "BIT 3, E",   _Zv(E & (0x1 << 3));               )
DEF_OPCODE(CB, 5C, 2, 8,  "Z01_", "BIT 3, H",   _Zv(H & (0x1 << 3));               )
DEF_OPCODE(CB, 5D, 2, 8,  "Z01_", "BIT 3, L",   _Zv(L & (0x1 << 3));               )
DEF_OPCODE(CB, 5E, 2, 16, "Z01_", "BIT 3, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 3));  )
DEF_OPCODE(CB, 5F, 2, 8,  "Z01_", "BIT 3, A",   _Zv(A & (0x1 << 3));               )

DEF_OPCODE(CB, 60, 2, 8,  "Z01_", "BIT 4, B",   _Zv(B & (0x1 << 4));               )
DEF_OPCODE(CB, 61, 2, 8,  "Z01_", "BIT 4, C",   _Zv(C & (0x1 << 4));               )
DEF_OPCODE(CB, 62, 2, 8,  "Z01_", "BIT 4, D",   _Zv(D & (0x1 << 4));               )
DEF_OPCODE(CB, 63, 2, 8,  "Z01_", "BIT 4, E",   _Zv(E & (0x1 << 4));               )
DEF_OPCODE(CB, 64, 2, 8,  "Z01_", "BIT 4, H",   _Zv(H & (0x1 << 4));               )
DEF_OPCODE(CB, 65, 2, 8,  "Z01_", "BIT 4, L",   _Zv(L & (0x1 << 4));               )
DEF_OPCODE(CB, 66, 2, 16, "Z01_", "BIT 4, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 4));  )
DEF_OPCODE(CB, 67, 2, 8,  "Z01_", "BIT 4, A",   _Zv(A & (0x1 << 4));               )
DEF_OPCODE(CB, 68, 2, 8,  "Z01_", "BIT 5, B",   _Zv(B & (0x1 << 5));               )
DEF_OPCODE(CB, 69, 2, 8,  "Z01_", "BIT 5, C",   _Zv(C & (0x1 << 5));               )
DEF_OPCODE(CB, 6A, 2, 8,  "Z01_", "BIT 5, D",   _Zv(D & (0x1 << 5));               )
DEF_OPCODE(CB, 6B, 2, 8,  "Z01_", "BIT 5, E",   _Zv(E & (0x1 << 5));               )
DEF_OPCODE(CB, 6C, 2, 8,  "Z01_", "BIT 5, H",   _Zv(H & (0x1 << 5));               )
DEF_OPCODE(CB, 6D, 2, 8,  "Z01_", "BIT 5, L",   _Zv(L & (0x1 << 5));               )
DEF_OPCODE(CB, 6E, 2, 16, "Z01_", "BIT 5, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 5));  )
DEF_OPCODE(CB, 6F, 2, 8,  "Z01_", "BIT 5, A",   _Zv(A & (0x1 << 5));               )

DEF_OPCODE(CB, 70, 2, 8,  "Z01_", "BIT 6, B",   _Zv(B & (0x1 << 6));               )
DEF_OPCODE(CB, 71, 2, 8,  "Z01_", "BIT 6, C",   _Zv(C & (0x1 << 6));               )
DEF_OPCODE(CB, 72, 2, 8,  "Z01_", "BIT 6, D",   _Zv(D & (0x1 << 6));               )
DEF_OPCODE(CB, 73, 2, 8,  "Z01_", "BIT 6, E",   _Zv(E & (0x1 << 6));               )
DEF_OPCODE(CB, 74, 2, 8,  "Z01_", "BIT 6, H",   _Zv(H & (0x1 << 6));               )
DEF_OPCODE(CB, 75, 2, 8,  "Z01_", "BIT 6, L",   _Zv(L & (0x1 << 6));               )
DEF_OPCODE(CB, 76, 2, 16, "Z01_", "BIT 6, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 6));  )
DEF_OPCODE(CB, 77, 2, 8,  "Z01_", "BIT 6, A",   _Zv(A & (0x1 << 6));               )
DEF_OPCODE(CB, 78, 2, 8,  "Z01_", "BIT 7, B",   _Zv(B & (0x1 << 7));               )
DEF_OPCODE(CB, 79, 2, 8,  "Z01_", "BIT 7, C",   _Zv(C & (0x1 << 7));               )
DEF_OPCODE(CB, 7A, 2, 8,  "Z01_", "BIT 7, D",   _Zv(D & (0x1 << 7));               )
DEF_OPCODE(CB, 7B, 2, 8,  "Z01_", "BIT 7, E",   _Zv(E & (0x1 << 7));               )
DEF_OPCODE(CB, 7C, 2, 8,  "Z01_", "BIT 7, H",   _Zv(H & (0x1 << 7));               )
DEF_OPCODE(CB, 7D, 2, 8,  "Z01_", "BIT 7, L",   _Zv(L & (0x1 << 7));               )
DEF_OPCODE(CB, 7E, 2, 16, "Z01_", "BIT 7, (HL)",r(HL, &t8); _Zv(t8 & (0x1 << 7));  )
DEF_OPCODE(CB, 7F, 2, 8,  "Z01_", "BIT 7, A",   _Zv(A & (0x1 << 7));               )

DEF_OPCODE(CB, 80, 2, 8,  "____", "RES 0, B",   B &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 81, 2, 8,  "____", "RES 0, C",   C &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 82, 2, 8,  "____", "RES 0, D",   D &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 83, 2, 8,  "____", "RES 0, E",   E &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 84, 2, 8,  "____", "RES 0, H",   H &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 85, 2, 8,  "____", "RES 0, L",   L &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 86, 2, 16, "____", "RES 0, (HL)",r(HL, &t8); t8 &= ~(0x01 << 0); w(HL, t8);)
DEF_OPCODE(CB, 87, 2, 8,  "____", "RES 0, A",   A &= ~(0x01 << 0);                 )
DEF_OPCODE(CB, 88, 2, 8,  "____", "RES 1, B",   B &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 89, 2, 8,  "____", "RES 1, C",   C &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 8A, 2, 8,  "____", "RES 1, D",   D &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 8B, 2, 8,  "____", "RES 1, E",   E &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 8C, 2, 8,  "____", "RES 1, H",   H &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 8D, 2, 8,  "____", "RES 1, L",   L &= ~(0x01 << 1);                 )
DEF_OPCODE(CB, 8E, 2, 16, "____", "RES 1, (HL)",r(HL, &t8); t8 &= ~(0x01 << 1); w(HL, t8);)
DEF_OPCODE(CB, 8F, 2, 8,  "____", "RES 1, A",   A &= ~(0x01 << 1);                 )

DEF_OPCODE(CB, 90, 2, 8,  "____", "RES 2, B",   B &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 91, 2, 8,  "____", "RES 2, C",   C &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 92, 2, 8,  "____", "RES 2, D",   D &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 93, 2, 8,  "____", "RES 2, E",   E &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 94, 2, 8,  "____", "RES 2, H",   H &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 95, 2, 8,  "____", "RES 2, L",   L &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 96, 2, 16, "____", "RES 2, (HL)",r(HL, &t8); t8 &= ~(0x01 << 2); w(HL, t8);)
DEF_OPCODE(CB, 97, 2, 8,  "____", "RES 2, A",   A &= ~(0x01 << 2);                 )
DEF_OPCODE(CB, 98, 2, 8,  "____", "RES 3, B",   B &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 99, 2, 8,  "____", "RES 3, C",   C &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 9A, 2, 8,  "____", "RES 3, D",   D &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 9B, 2, 8,  "____", "RES 3, E",   E &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 9C, 2, 8,  "____", "RES 3, H",   H &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 9D, 2, 8,  "____", "RES 3, L",   L &= ~(0x01 << 3);                 )
DEF_OPCODE(CB, 9E, 2, 16, "____", "RES 3, (HL)",r(HL, &t8); t8 &= ~(0x01 << 3); w(HL, t8);)
DEF_OPCODE(CB, 9F, 2, 8,  "____", "RES 3, A",   A &= ~(0x01 << 3);                 )

DEF_OPCODE(CB, A0, 2, 8,  "____", "RES 4, B",   B &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A1, 2, 8,  "____", "RES 4, C",   C &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A2, 2, 8,  "____", "RES 4, D",   D &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A3, 2, 8,  "____", "RES 4, E",   E &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A4, 2, 8,  "____", "RES 4, H",   H &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A5, 2, 8,  "____", "RES 4, L",   L &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A6, 2, 16, "____", "RES 4, (HL)",r(HL, &t8); t8 &= ~(0x01 << 4); w(HL, t8);)
DEF_OPCODE(CB, A7, 2, 8,  "____", "RES 4, A",   A &= ~(0x01 << 4);                 )
DEF_OPCODE(CB, A8, 2, 8,  "____", "RES 5, B",   B &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, A9, 2, 8,  "____", "RES 5, C",   C &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, AA, 2, 8,  "____", "RES 5, D",   D &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, AB, 2, 8,  "____", "RES 5, E",   E &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, AC, 2, 8,  "____", "RES 5, H",   H &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, AD, 2, 8,  "____", "RES 5, L",   L &= ~(0x01 << 5);                 )
DEF_OPCODE(CB, AE, 2, 16, "____", "RES 5, (HL)",r(HL, &t8); t8 &= ~(0x01 << 5); w(HL, t8);)
DEF_OPCODE(CB, AF, 2, 8,  "____", "RES 5, A",   A &= ~(0x01 << 5);                 )

DEF_OPCODE(CB, B0, 2, 8,  "____", "RES 6, B",   B &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B1, 2, 8,  "____", "RES 6, C",   C &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B2, 2, 8,  "____", "RES 6, D",   D &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B3, 2, 8,  "____", "RES 6, E",   E &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B4, 2, 8,  "____", "RES 6, H",   H &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B5, 2, 8,  "____", "RES 6, L",   L &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B6, 2, 16, "____", "RES 6, (HL)",r(HL, &t8); t8 &= ~(0x01 << 6); w(HL, t8);)
DEF_OPCODE(CB, B7, 2, 8,  "____", "RES 6, A",   A &= ~(0x01 << 6);                 )
DEF_OPCODE(CB, B8, 2, 8,  "____", "RES 7, B",   B &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, B9, 2, 8,  "____", "RES 7, C",   C &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, BA, 2, 8,  "____", "RES 7, D",   D &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, BB, 2, 8,  "____", "RES 7, E",   E &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, BC, 2, 8,  "____", "RES 7, H",   H &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, BD, 2, 8,  "____", "RES 7, L",   L &= ~(0x01 << 7);                 )
DEF_OPCODE(CB, BE, 2, 16, "____", "RES 7, (HL)",r(HL, &t8); t8 &= ~(0x01 << 7); w(HL, t8);)
DEF_OPCODE(CB, BF, 2, 8,  "____", "RES 7, A",   A &= ~(0x01 << 7);                 )

DEF_OPCODE(CB, C0, 2, 8,  "____", "SET 0, B",   B |= (0x01 << 0);                  )
DEF_OPCODE(CB, C1, 2, 8,  "____", "SET 0, C",   C |= (0x01 << 0);                  )
DEF_OPCODE(CB, C2, 2, 8,  "____", "SET 0, D",   D |= (0x01 << 0);                  )
DEF_OPCODE(CB, C3, 2, 8,  "____", "SET 0, E",   E |= (0x01 << 0);                  )
DEF_OPCODE(CB, C4, 2, 8,  "____", "SET 0, H",   H |= (0x01 << 0);                  )
DEF_OPCODE(CB, C5, 2, 8,  "____", "SET 0, L",   L |= (0x01 << 0);                  )
DEF_OPCODE(CB, C6, 2, 16, "____", "SET 0, (HL)",r(HL, &t8); t8 |= (0x01 << 0); w(HL, t8);)
DEF_OPCODE(CB, C7, 2, 8,  "____", "SET 0, A",   A |= (0x01 << 0);                  )
DEF_OPCODE(CB, C8, 2, 8,  "____", "SET 1, B",   B |= (0x01 << 1);                  )
DEF_OPCODE(CB, C9, 2, 8,  "____", "SET 1, C",   C |= (0x01 << 1);                  )
DEF_OPCODE(CB, CA, 2, 8,  "____", "SET 1, D",   D |= (0x01 << 1);                  )
DEF_OPCODE(CB, CB, 2, 8,  "____", "SET 1, E",   E |= (0x01 << 1);                  )
DEF_OPCODE(CB, CC, 2, 8,  "____", "SET 1, H",   H |= (0x01 << 1);                  )
DEF_OPCODE(CB, CD, 2, 8,  "____", "SET 1, L",   L |= (0x01 << 1);                  )
DEF_OPCODE(CB, CE, 2, 16, "____", "SET 1, (HL)",r(HL, &t8); t8 |= (0x01 << 1); w(HL, t8);)
DEF_OPCODE(CB, CF, 2, 8,  "____", "SET 1, A",   A |= (0x01 << 1);                  )

DEF_OPCODE(CB, D0, 2, 8,  "____", "SET 2, B",   B |= (0x01 << 2);                  )
DEF_OPCODE(CB, D1, 2, 8,  "____", "SET 2, C",   C |= (0x01 << 2);                  )
DEF_OPCODE(CB, D2, 2, 8,  "____", "SET 2, D",   D |= (0x01 << 2);                  )
DEF_OPCODE(CB, D3, 2, 8,  "____", "SET 2, E",   E |= (0x01 << 2);                  )
DEF_OPCODE(CB, D4, 2, 8,  "____", "SET 2, H",   H |= (0x01 << 2);                  )
DEF_OPCODE(CB, D5, 2, 8,  "____", "SET 2, L",   L |= (0x01 << 2);                  )
DEF_OPCODE(CB, D6, 2, 16, "____", "SET 2, (HL)",r(HL, &t8); t8 |= (0x01 << 2); w(HL, t8);)
DEF_OPCODE(CB, D7, 2, 8,  "____", "SET 2, A",   A |= (0x01 << 2);                  )
DEF_OPCODE(CB, D8, 2, 8,  "____", "SET 3, B",   B |= (0x01 << 3);                  )
DEF_OPCODE(CB, D9, 2, 8,  "____", "SET 3, C",   C |= (0x01 << 3);                  )
DEF_OPCODE(CB, DA, 2, 8,  "____", "SET 3, D",   D |= (0x01 << 3);                  )
DEF_OPCODE(CB, DB, 2, 8,  "____", "SET 3, E",   E |= (0x01 << 3);                  )
DEF_OPCODE(CB, DC, 2, 8,  "____", "SET 3, H",   H |= (0x01 << 3);                  )
DEF_OPCODE(CB, DD, 2, 8,  "____", "SET 3, L",   L |= (0x01 << 3);                  )
DEF_OPCODE(CB, DE, 2, 16, "____", "SET 3, (HL)",r(HL, &t8); t8 |= (0x01 << 3); w(HL, t8);)
DEF_OPCODE(CB, DF, 2, 8,  "____", "SET 3, A",   A |= (0x01 << 3);                  )

DEF_OPCODE(CB, E0, 2, 8,  "____", "SET 4, B",   B |= (0x01 << 4);                  )
DEF_OPCODE(CB, E1, 2, 8,  "____", "SET 4, C",   C |= (0x01 << 4);                  )
DEF_OPCODE(CB, E2, 2, 8,  "____", "SET 4, D",   D |= (0x01 << 4);                  )
DEF_OPCODE(CB, E3, 2, 8,  "____", "SET 4, E",   E |= (0x01 << 4);                  )
DEF_OPCODE(CB, E4, 2, 8,  "____", "SET 4, H",   H |= (0x01 << 4);                  )
DEF_OPCODE(CB, E5, 2, 8,  "____", "SET 4, L",   L |= (0x01 << 4);                  )
DEF_OPCODE(CB, E6, 2, 16, "____", "SET 4, (HL)",r(HL, &t8); t8 |= (0x01 << 4); w(HL, t8);)
DEF_OPCODE(CB, E7, 2, 8,  "____", "SET 4, A",   A |= (0x01 << 4);                  )
DEF_OPCODE(CB, E8, 2, 8,  "____", "SET 5, B",   B |= (0x01 << 5);                  )
DEF_OPCODE(CB, E9, 2, 8,  "____", "SET 5, C",   C |= (0x01 << 5);                  )
DEF_OPCODE(CB, EA, 2, 8,  "____", "SET 5, D",   D |= (0x01 << 5);                  )
DEF_OPCODE(CB, EB, 2, 8,  "____", "SET 5, E",   E |= (0x01 << 5);                  )
DEF_OPCODE(CB, EC, 2, 8,  "____", "SET 5, H",   H |= (0x01 << 5);                  )
DEF_OPCODE(CB, ED, 2, 8,  "____", "SET 5, L",   L |= (0x01 << 5);                  )
DEF_OPCODE(CB, EE, 2, 16, "____", "SET 5, (HL)",r(HL, &t8); t8 |= (0x01 << 5); w(HL, t8);)
DEF_OPCODE(CB, EF, 2, 8,  "____", "SET 5, A",   A |= (0x01 << 5);                  )

DEF_OPCODE(CB, F0, 2, 8,  "____", "SET 6, B",   B |= (0x01 << 6);                  )
DEF_OPCODE(CB, F1, 2, 8,  "____", "SET 6, C",   C |= (0x01 << 6);                  )
DEF_OPCODE(CB, F2, 2, 8,  "____", "SET 6, D",   D |= (0x01 << 6);                  )
DEF_OPCODE(CB, F3, 2, 8,  "____", "SET 6, E",   E |= (0x01 << 6);                  )
DEF_OPCODE(CB, F4, 2, 8,  "____", "SET 6, H",   H |= (0x01 << 6);                  )
DEF_OPCODE(CB, F5, 2, 8,  "____", "SET 6, L",   L |= (0x01 << 6);                  )
DEF_OPCODE(CB, F6, 2, 16, "____", "SET 6, (HL)",r(HL, &t8); t8 |= (0x01 << 6); w(HL, t8);)
DEF_OPCODE(CB, F7, 2, 8,  "____", "SET 6, A",   A |= (0x01 << 6);                  )
DEF_OPCODE(CB, F8, 2, 8,  "____", "SET 7, B",   B |= (0x01 << 7);                  )
DEF_OPCODE(CB, F9, 2, 8,  "____", "SET 7, C",   C |= (0x01 << 7);                  )
DEF_OPCODE(CB, FA, 2, 8,  "____", "SET 7, D",   D |= (0x01 << 7);                  )
DEF_OPCODE(CB, FB, 2, 8,  "____", "SET 7, E",   E |= (0x01 << 7);                  )
DEF_OPCODE(CB, FC, 2, 8,  "____", "SET 7, H",   H |= (0x01 << 7);                  )
DEF_OPCODE(CB, FD, 2, 8,  "____", "SET 7, L",   L |= (0x01 << 7);                  )
DEF_OPCODE(CB, FE, 2, 16, "____", "SET 7, (HL)",r(HL, &t8); t8 |= (0x01 << 7); w(HL, t8);)
DEF_OPCODE(CB, FF, 2, 8,  "____", "SET 7, A",   A |= (0x01 << 7);                  )

#undef INC
#undef DEC
#undef ADD
#undef ADD16
#undef ADC
#undef SUB
#undef SBC
#undef CP
#undef POP
#undef PUSH
#undef CALL
#undef RET

#undef TODO
#undef DEF_OPCODE
